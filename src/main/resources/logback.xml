<?xml version="1.0" encoding="UTF-8" ?>
<!--
    scan属性为true时，配置文件发生变化，将会被重新加载，默认值也为true
    scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位为毫秒，
               该属性只有scan为true时才生效
    debug:如果属性设置为true时，将打印出logback内部的日志信息，实时查看logback运行状态，默认为false
-->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!--
        1.将日志输出到控制台
            name:定义该日志附加器的名称
            class:定义该日志附加器的全限定类名
    -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>
                <!--设置日志输出格式-->
                [PLogback] %d{yyyy-MM-dd HH:mm:ss,SSS} [%-5p] %c:%L - %m%n
            </pattern>
        </encoder>

        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>warn</level>
            <onMatch>ACCEPT</onMatch>
            <onMissmatch>DENY</onMissmatch>
        </filter>
    </appender>

    <!--
        2.将日志输出到文件
        file:被写入的文件名称，可以是相对的目录，也可以是绝对的目录，如果上级目录不存在，会自动会创建，没有默认值
        append:如果为true,日志会被追加文件的结果，如果是false,清空现存文件，默认值为true
    -->
    <appender name="file" class="ch.qos.logback.core.FileAppender">
        <file>d:/logger/logbackfile.log</file>
        <append>true</append>
        <encoder>
            <pattern>
                [PLogback] %d{yyyy-MM-dd HH:mm:ss,SSS} [%-5p] %c:%L - %m%n
            </pattern>
        </encoder>
    </appender>

    <!--滚动文件追加器-->
    <appender name="rollFile" class="ch.qos.logback.core.rolling.RollingFileAppender">

        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>

        <!--设置日志滚动的策略-->
        <!--
            滚动记录日志文件，先将日志记录到指定的文件，当符合某个条件时，将日志记录到其它文件
            最常用的滚动策略：它是根据时间来制定滚动策略，即负责滚动也负责触发滚动
        -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志输出的位置，可以是相对的也可以是绝对的-->
            <!--
                %i:控制单个日志文件如果大小超过多少，那么就会生成一个新的日志文件，i就是生成新的日志文件的数量值，默认最大为7个
            -->
            <fileNamePattern>
                d:/logger/%d{yyyy-MM-dd}/rollFile-%i.log
            </fileNamePattern>

            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <!--定义单个日志文件的大小最大值-->
                <MaxFileSize>2kb</MaxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>
                [logback-demo] %d{yyyy-MM-dd HH:mm:ss.SSS} [%-5p] %c:%L - %m%n
            </pattern>
        </encoder>
    </appender>
    <!--
        日志的根标签
        root默认的日志级别为debug
    -->
    <root>
        <!--定义根日志输出最低日志级别 -->
        <level value="info"/>
        <appender-ref ref="console"/>
        <appender-ref ref="file"/>
        <appender-ref ref="rollFile"/>
    </root>
</configuration>